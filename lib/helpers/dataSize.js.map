{"version":3,"file":"dataSize.js","sourceRoot":"","sources":["../../src/helpers/dataSize.ts"],"names":[],"mappings":";AAOA;;GAEG;AACH;IAGI,qBAAY,KAAU;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACI,6BAAO,GAAd,UAAe,IAAY;QACvB,IAAI,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAErC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACtC,CAAC;QAED,MAAM,CAAC,aAAa,CAAC;IACzB,CAAC;IACL,kBAAC;AAAD,CAAC,AArBD,IAqBC;AArBD,kCAqBC;AAAA,CAAC","sourcesContent":["/** \n * Common interface to convert sizes\n */\nexport interface ISizeConvert {\n    convert(size: string): any;\n}\n\n/** \n * Base class to convert sizes\n */\nexport class SizeConvert implements ISizeConvert {\n    private sizes: any;\n\n    constructor(sizes: any) {\n        this.sizes = sizes;\n    }\n\n    /**\n     * Convert size to other country sizes\n     *\n     * @param size A size to be converted\n     */\n    public convert(size: string): any {\n        let convertedSize = this.sizes[size];\n\n        if (!convertedSize) {\n            throw new Error(\"Size not found\");\n        }\n\n        return convertedSize;\n    }\n};\n"]}